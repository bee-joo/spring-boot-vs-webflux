version: "3"

services:
  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    env_file:
      - .env
    ports:
      - "27018:27017"

  mongo-import:
    container_name: mongo-import
    env_file:
      - .env
    build:
      context: ./mflix
      dockerfile: Dockerfile
    environment:
      - HOST=mongodb
      - PORT=27017
      - USERNAME=$MONGO_INITDB_ROOT_USERNAME
      - PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
    depends_on:
      - mongodb

  spring-boot-java:
    ports:
      - "8080:8080"
    container_name: spring-boot-java
    env_file:
      - .env
    build:
      context: ./spring-boot-java
      dockerfile: Dockerfile
    environment:
      - USERNAME=$MONGO_INITDB_ROOT_USERNAME
      - PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
    links:
      - mongodb:mongodb
    depends_on:
      - mongodb

  spring-webflux-java:
    ports:
      - "8081:8081"
    container_name: spring-webflux-java
    env_file:
      - .env
    build:
      context: ./spring-webflux-java
      dockerfile: Dockerfile
    environment:
      - USERNAME=$MONGO_INITDB_ROOT_USERNAME
      - PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
    links:
      - mongodb:mongodb
    depends_on:
      - mongodb

  spring-webflux-kotlin:
    container_name: spring-webflux-kotlin
    env_file:
      - .env
    ports:
      - "8082:8082"
    build:
      context: ./spring-webflux-kotlin
      dockerfile: Dockerfile
    environment:
      - USERNAME=$MONGO_INITDB_ROOT_USERNAME
      - PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
    links:
      - mongodb:mongodb
    depends_on:
      - mongodb

  python-async:
    container_name: python-async
    ports:
      - "8083:8083"
    build:
      context: ./python-async
      dockerfile: Dockerfile
    links:
      - mongodb:mongodb
    depends_on:
      - mongodb